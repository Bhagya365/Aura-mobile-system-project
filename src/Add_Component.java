
import java.awt.Image;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Vector;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author PIYUMI PC
 */
public class Add_Component extends javax.swing.JFrame {

    /**
     * Creates new form Add_Component
     */
    public Add_Component() {
        initComponents();
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy/MM/dd");
        Date d = new Date();
        jLabel5.setText(sdf.format(d));
        try {            
            ResultSet rs = DBC.search("SELECT * FROM customer");
            while(rs.next()) {
                String id = rs.getString("id");          //db to tble
                String i = rs.getString("name");
                String q = rs.getString("contact");
                DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
                dtm.insertRow(dtm.getRowCount(), new Object[]{id,i,q});
            }           
        } catch (Exception e) {
            e.printStackTrace();
        }
        try {            
            ResultSet rs = DBC.search("SELECT * FROM distributor");
            while(rs.next()) {
                String id = rs.getString("id");          //db to tble
                String i = rs.getString("name");
                String q = rs.getString("contact");
                DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
                dtm.insertRow(dtm.getRowCount(), new Object[]{id,i,q});
            }           
        } catch (Exception e) {
            e.printStackTrace();
        }
        try {            
            ResultSet rs = DBC.search("SELECT * FROM brand");
            while(rs.next()) {
                String id = rs.getString("id");          //db to tble
                String i = rs.getString("name");               
                DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
                dtm.insertRow(dtm.getRowCount(), new Object[]{id,i});
            }           
        } catch (Exception e) {
            e.printStackTrace();
        }
        try {            
            ResultSet rs = DBC.search("SELECT * FROM model");
            while(rs.next()) {
                String id = rs.getString("id");          //db to tble
                String i = rs.getString("name");
                DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
                dtm.insertRow(dtm.getRowCount(), new Object[]{id,i});
            }           
        } catch (Exception e) {
            e.printStackTrace();
        }
        try {            
            ResultSet rs = DBC.search("SELECT * FROM bank");
            while(rs.next()) {
                String id = rs.getString("id");          //db to tble
                String i = rs.getString("name");
                String q = rs.getString("account");
                DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
                dtm.insertRow(dtm.getRowCount(), new Object[]{id,i,q});
            }           
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton9 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("CATEGORY");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(46, 131, 183, 36));

        jComboBox1.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "CUSTOMER", "DISTRIBUTOR", "BRAND", "MODEL", "BANK ACCOUNT" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        jPanel1.add(jComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(258, 131, 325, 36));

        jLabel6.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("VALUE");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(46, 180, 183, 36));

        jTextField1.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jPanel1.add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(258, 181, 325, 36));

        jLabel7.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("NUMBER");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(46, 230, 183, 36));

        jTextField2.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jPanel1.add(jTextField2, new org.netbeans.lib.awtextra.AbsoluteConstraints(258, 231, 325, 36));

        jButton1.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Source/Billing/add.png"))); // NOI18N
        jButton1.setText("ADD");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(68, 285, 111, -1));

        jButton2.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Source/Billing/update product.png"))); // NOI18N
        jButton2.setText("EDIT");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(223, 285, 114, -1));

        jButton3.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Source/Billing/delete.png"))); // NOI18N
        jButton3.setText("REMOVE");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(374, 285, 164, -1));

        jTable1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "VALUE", "NUMBER"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(28, 329, 890, 345));

        jButton9.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jButton9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Source/Billing/undo.png"))); // NOI18N
        jButton9.setText("BACK");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton9, new org.netbeans.lib.awtextra.AbsoluteConstraints(775, 681, 153, 36));

        jLabel2.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 72)); // NOI18N
        jLabel2.setText("Add Component");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 20, -1, -1));
        jPanel1.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 102, 926, 10));

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Source/Billing/new product.png"))); // NOI18N
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 30, -1, -1));

        jLabel5.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel5.setText("0000/00/00");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 690, -1, -1));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Source/Billing/123456.png"))); // NOI18N
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 730, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        //add btn
        try {
            DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
            //String category = String.valueOf(jComboBox1.getSelectedItem());
            String category = jComboBox1.getSelectedItem().toString();
            String value = jTextField1.getText();
            String no = jTextField2.getText();
            if (value.isEmpty() || no.isEmpty()) {
                JOptionPane.showMessageDialog(this,"Please Enter All Details!","INFORMATION!",JOptionPane.INFORMATION_MESSAGE);
            }
            if (category.equals("CUSTOMER")) {
                //customer tble ekt add wnn oni                  
                dtm.setRowCount(0);                                                 //ui table eke kalin thibb rows tika makila ynna. db eken makennah
                DBC.iud("INSERT INTO customer (`name`,`contact`) VALUES ('"+value+"','"+no+"') ");
                JOptionPane.showMessageDialog(this, "Customer Added Successfully!", "DONE!",JOptionPane.INFORMATION_MESSAGE);
                ResultSet rs = DBC.search("SELECT * FROM customer");
                while(rs.next()){
                String id = rs.getString("id");
                String name = rs.getString("name");
                String contact = rs.getString("contact");
                
                Vector v = new Vector();
                v.add(id);
                v.add(name);
                v.add(contact);
                
                dtm.addRow(v);               
                }
            } 
            else if(category.equals("DISTRIBUTOR")){
                //distributor tble elt add wnn oni
                dtm.setRowCount(0);                                                 //ui table eke kalin thibb rows tika makila ynna. db eken makennah
                DBC.iud("INSERT INTO distributor (`name`,`contact`) VALUES ('"+value+"','"+no+"') ");
                JOptionPane.showMessageDialog(this, "Distributor Added Successfully!", "DONE!",JOptionPane.INFORMATION_MESSAGE);
                ResultSet rs = DBC.search("SELECT * FROM distributor");
                while(rs.next()){
                String id = rs.getString("id");
                String name = rs.getString("name");
                String contact = rs.getString("contact");
                
                Vector v = new Vector();
                v.add(id);
                v.add(name);
                v.add(contact);
                
                dtm.addRow(v);               
                }
            }
            else if(category.equals("BRAND")){
                //brand tble elt add wnn oni
                dtm.setRowCount(0);                                                 //ui table eke kalin thibb rows tika makila ynna. db eken makennah
                DBC.iud("INSERT INTO brand (`name`) VALUES ('"+value+"') ");
                JOptionPane.showMessageDialog(this, "Brand Added Successfully!", "DONE!",JOptionPane.INFORMATION_MESSAGE);
                ResultSet rs = DBC.search("SELECT * FROM brand");
                while(rs.next()){
                String id = rs.getString("id");
                String name = rs.getString("name");               
                
                Vector v = new Vector();
                v.add(id);
                v.add(name);                
                
                dtm.addRow(v);               
                }
            }
            else if(category.equals("MODEL")){
                //model tble elt add wnn oni
                dtm.setRowCount(0);                                                 //ui table eke kalin thibb rows tika makila ynna. db eken makennah
                DBC.iud("INSERT INTO model (`name`) VALUES ('"+value+"') ");
                JOptionPane.showMessageDialog(this, "Model Added Successfully!", "DONE!",JOptionPane.INFORMATION_MESSAGE);
                ResultSet rs = DBC.search("SELECT * FROM model");
                while(rs.next()){
                String id = rs.getString("id");
                String name = rs.getString("name");               
                
                Vector v = new Vector();
                v.add(id);
                v.add(name);                
                
                dtm.addRow(v);               
                }
            }
            else if(category.equals("BANK ACCOUNT")){
                //bank account tble elt add wnn oni
                dtm.setRowCount(0);                                                 //ui table eke kalin thibb rows tika makila ynna. db eken makennah
                DBC.iud("INSERT INTO bank (`name`,`account`) VALUES ('"+value+"','"+no+"') ");
                JOptionPane.showMessageDialog(this, "Bank Added Successfully!", "DONE!",JOptionPane.INFORMATION_MESSAGE);
                ResultSet rs = DBC.search("SELECT * FROM bank");
                while(rs.next()){
                String id = rs.getString("id");
                String name = rs.getString("name");
                String contact = rs.getString("account");
                
                Vector v = new Vector();
                v.add(id);
                v.add(name);
                v.add(contact);
                
                dtm.addRow(v);               
                }
            }
            else{
                JOptionPane.showMessageDialog(this, "Please Select a Category!","ERROR!",JOptionPane.ERROR_MESSAGE);
            }
            jTextField1.setText(" "); 
            jTextField2.setText(" ");
            
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        //edit btn
        DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
        try {
            String category = jComboBox1.getSelectedItem().toString();
            int r = jTable1.getSelectedRow();
            String id = String.valueOf(jTable1.getValueAt(r, 0));
            String value = String.valueOf(jTable1.getValueAt(r, 1));
            String no = String.valueOf(jTable1.getValueAt(r, 2)); 
            if (category.equals("CUSTOMER")) {
                dtm.setRowCount(0);
                //customer update
                DBC.iud("UPDATE customer SET `name` = '"+value+"' WHERE `id` = '"+id+"'");
                DBC.iud("UPDATE customer SET `contact` = '"+no+"' WHERE `id` = '"+id+"'");
                JOptionPane.showMessageDialog(this, "Customer Update Successfully!", "DONE!",JOptionPane.INFORMATION_MESSAGE);
                ResultSet rs = DBC.search("SELECT * FROM customer");
                while(rs.next()){
                String id1 = rs.getString("id");
                String name = rs.getString("name");
                String contact = rs.getString("contact");
                
                Vector v = new Vector();
                v.add(id1);
                v.add(name);
                v.add(contact);
                
                dtm.addRow(v);               
                }
            }
            else if (category.equals("DISTRIBUTOR")) {
                //distributor update
                dtm.setRowCount(0);
                DBC.iud("UPDATE distributor SET `name` = '"+value+"' WHERE `id` = '"+id+"'");
                DBC.iud("UPDATE distributor SET `contact` = '"+no+"' WHERE `id` = '"+id+"'");
                JOptionPane.showMessageDialog(this, "Distributor Update Successfully!", "DONE!",JOptionPane.INFORMATION_MESSAGE);
                ResultSet rs = DBC.search("SELECT * FROM distributor");
                while(rs.next()){
                String id1 = rs.getString("id");
                String name = rs.getString("name");
                String contact = rs.getString("contact");
                
                Vector v = new Vector();
                v.add(id1);
                v.add(name);
                v.add(contact);
                
                dtm.addRow(v);               
                }              
            }
            else if (category.equals("BRAND")) {
                //brand update
                dtm.setRowCount(0);
                DBC.iud("UPDATE brand SET `name` = '"+value+"' WHERE `id` = '"+id+"'");              
                JOptionPane.showMessageDialog(this, "Brand Update Successfully!", "DONE!",JOptionPane.INFORMATION_MESSAGE);
                ResultSet rs = DBC.search("SELECT * FROM brand");
                while(rs.next()){
                String id1 = rs.getString("id");
                String name = rs.getString("name");
                
                Vector v = new Vector();
                v.add(id1);
                v.add(name);
                
                dtm.addRow(v);               
                }
            }
            else if (category.equals("MODEL")) {
                //model update
                dtm.setRowCount(0);
                DBC.iud("UPDATE model SET `name` = '"+value+"' WHERE `id` = '"+id+"'");              
                JOptionPane.showMessageDialog(this, "Model Update Successfully!", "DONE!",JOptionPane.INFORMATION_MESSAGE);
                ResultSet rs = DBC.search("SELECT * FROM model");
                while(rs.next()){
                String id1 = rs.getString("id");
                String name = rs.getString("name");
                
                Vector v = new Vector();
                v.add(id1);
                v.add(name);
                
                dtm.addRow(v);               
                }
                
            }
            else if (category.equals("BANK ACCOUNT")) {
                //bank account update
                dtm.setRowCount(0);
                DBC.iud("UPDATE bank SET `name` = '"+value+"' WHERE `id` = '"+id+"'");
                DBC.iud("UPDATE bank SET `account` = '"+no+"' WHERE `id` = '"+id+"'");
                JOptionPane.showMessageDialog(this, "Bank Account Update Successfully!", "DONE!",JOptionPane.INFORMATION_MESSAGE);
                ResultSet rs = DBC.search("SELECT * FROM bank");
                while(rs.next()){
                String id1 = rs.getString("id");
                String name = rs.getString("name");
                String contact = rs.getString("account");
                
                Vector v = new Vector();
                v.add(id1);
                v.add(name);
                v.add(contact);
                
                dtm.addRow(v);               
                } 
            }
            else{
                JOptionPane.showMessageDialog(this, "Please Select a Category!","ERROR!",JOptionPane.ERROR_MESSAGE);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        //remove btn
        DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
        try {
            String category = jComboBox1.getSelectedItem().toString();
            int r = jTable1.getSelectedRow();
            String id = String.valueOf(jTable1.getValueAt(r, 0));           
            if (category.equals("CUSTOMER")) {
                dtm.setRowCount(0);
                //customer update
                DBC.iud("DELETE FROM customer WHERE `id` = '"+id+"'");
                JOptionPane.showMessageDialog(this, "Customer Deleted Successfully!", "DONE!",JOptionPane.INFORMATION_MESSAGE);
                ResultSet rs = DBC.search("SELECT * FROM customer");
                while(rs.next()){
                String id1 = rs.getString("id");
                String name = rs.getString("name");
                String contact = rs.getString("contact");
                
                Vector v = new Vector();
                v.add(id1);
                v.add(name);
                v.add(contact);
                
                dtm.addRow(v);               
                }
            }
            else if (category.equals("DISTRIBUTOR")) {
                //distributor update
                dtm.setRowCount(0);
                DBC.iud("DELETE FROM distributor WHERE `id` = '"+id+"'");
                JOptionPane.showMessageDialog(this, "Distributor Delete Successfully!", "DONE!",JOptionPane.INFORMATION_MESSAGE);
                ResultSet rs = DBC.search("SELECT * FROM distributor");
                while(rs.next()){
                String id1 = rs.getString("id");
                String name = rs.getString("name");
                String contact = rs.getString("contact");
                
                Vector v = new Vector();
                v.add(id1);
                v.add(name);
                v.add(contact);
                
                dtm.addRow(v);               
                }              
            }
            else if (category.equals("BRAND")) {
                //brand update
                dtm.setRowCount(0);
                DBC.iud("DELETE FROM brand WHERE `id` = '"+id+"'");              
                JOptionPane.showMessageDialog(this, "Brand Delete Successfully!", "DONE!",JOptionPane.INFORMATION_MESSAGE);
                ResultSet rs = DBC.search("SELECT * FROM brand");
                while(rs.next()){
                String id1 = rs.getString("id");
                String name = rs.getString("name");
                
                Vector v = new Vector();
                v.add(id1);
                v.add(name);
                
                dtm.addRow(v);               
                }
            }
            else if (category.equals("MODEL")) {
                //model update
                dtm.setRowCount(0);
                DBC.iud("DELETE FROM model WHERE `id` = '"+id+"'");              
                JOptionPane.showMessageDialog(this, "Model Deleted Successfully!", "DONE!",JOptionPane.INFORMATION_MESSAGE);
                ResultSet rs = DBC.search("SELECT * FROM model");
                while(rs.next()){
                String id1 = rs.getString("id");
                String name = rs.getString("name");
                
                Vector v = new Vector();
                v.add(id1);
                v.add(name);
                
                dtm.addRow(v);               
                }
                
            }
            else if (category.equals("BANK ACCOUNT")) {
                //bank account update
                dtm.setRowCount(0);
                DBC.iud("DELETE FROM bank WHERE `id` = '"+id+"'");
                JOptionPane.showMessageDialog(this, "Bank Account Delete Successfully!", "DONE!",JOptionPane.INFORMATION_MESSAGE);
                ResultSet rs = DBC.search("SELECT * FROM bank");
                while(rs.next()){
                String id1 = rs.getString("id");
                String name = rs.getString("name");
                String contact = rs.getString("account");
                
                Vector v = new Vector();
                v.add(id1);
                v.add(name);
                v.add(contact);
                
                dtm.addRow(v);               
                } 
            }else{
                JOptionPane.showMessageDialog(this, "Please Select a Category!","ERROR!",JOptionPane.ERROR_MESSAGE);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
        //combobox
        DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
            //String category = String.valueOf(jComboBox1.getSelectedItem());
        String category = jComboBox1.getSelectedItem().toString();
        try {
            if (category.equals("CUSTOMER")) {
                dtm.setRowCount(0);
                ResultSet rs = DBC.search("SELECT * FROM customer");
                while(rs.next()){
                String id1 = rs.getString("id");
                String name = rs.getString("name");
                String contact = rs.getString("contact");
                
                Vector v = new Vector();
                v.add(id1);
                v.add(name);
                v.add(contact);
                
                dtm.addRow(v);               
                } 
            }
            if (category.equals("DISTRIBUTOR")) {
                dtm.setRowCount(0);
                ResultSet rs = DBC.search("SELECT * FROM distributor");
                while(rs.next()){
                String id1 = rs.getString("id");
                String name = rs.getString("name");
                String contact = rs.getString("contact");
                
                Vector v = new Vector();
                v.add(id1);
                v.add(name);
                v.add(contact);
                
                dtm.addRow(v);               
                } 
            }
            if (category.equals("BRAND")) {
                dtm.setRowCount(0);
                ResultSet rs = DBC.search("SELECT * FROM brand");
                while(rs.next()){
                String id1 = rs.getString("id");
                String name = rs.getString("name");
                
                Vector v = new Vector();
                v.add(id1);
                v.add(name);
                
                dtm.addRow(v);               
                }
            }
            if (category.equals("MODEL")) {
                dtm.setRowCount(0);
                ResultSet rs = DBC.search("SELECT * FROM model");
                while(rs.next()){
                String id1 = rs.getString("id");
                String name = rs.getString("name");
                
                Vector v = new Vector();
                v.add(id1);
                v.add(name);
                
                dtm.addRow(v);               
                }
            }
            if (category.equals("BANK ACCOUNT")) {
               dtm.setRowCount(0);
                ResultSet rs = DBC.search("SELECT * FROM bank");
                while(rs.next()){
                String id1 = rs.getString("id");
                String name = rs.getString("name");
                String contact = rs.getString("account");
                
                Vector v = new Vector();
                v.add(id1);
                v.add(name);
                v.add(contact);
                
                dtm.addRow(v);               
                } 
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
        //back
        this.dispose();
    }//GEN-LAST:event_jButton9ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Add_Component.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Add_Component.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Add_Component.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Add_Component.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Add_Component().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton9;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables
}
